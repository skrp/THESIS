####################################################
# MKRX UNIX NETWORK

                                             ~ skrp
                                       Kehkay Genkai
                                      of the village
                                  Hidden in the 1337
{{  t_(o0)_j  }}
\\ Meri Kann //
_\\cibR punX//______________________________________
|
|
|
|
|
|
|
This manuscript details the machine of MKRX UNIX NETWORKS
This system connects nodes thru encrypted tunnels

SICC network file system
MKRX archive tools
HIVE work processors

KERN hardened FreeBSD_10.3 custom unix kernels
PSK-OPIE privilege partition & escalation

PROTO unix network protocol implementations
STAT node & network dtrace sensor analysis

ZFS diagrams PCI, SATA, SAS, USB
Schematics & Utilities

MAN manuals of instructions & examples

####################################################
# Table of Contents
####################################################

# 0 ################################################
SICC
  Standard

# 1 ################################################
MKRX
  Tools explained
  Tool use & examples
    create GET from BKUP
    create GET from UNIQ
    populate a new drive
    extract a source

# 2 ################################################
HIVE
  Structure
  Mechanics
    ORDER
    SLEEP
    SUICIDE
    CLEAN
    RESUME
  API
    SHA
    GET
    UNTAR
    REGX
    BLKR
  Logs

# 3 ################################################
KERN
  Hardened
  PSK-OPIE
  RINGS (rings of power)
  USR
    root
    sroot
    lord
    heir
    seer
    norm

# 4 ################################################
PSK-OPIE
  Review
  ASIGN
  Mine
    KEY
    RAW

# 5 ################################################
PROTO
  Overview
  SSH
  SCP
  FTP
  PF
  NFS
  IRC
  8080
  HTTPS
  MORSE

# 6 ################################################
STAT
  List
  dtrace
    cpu
    PID
    fs
    net
  Performance
    LOG
    ECHO
  ANAL
    SELF
    NET

# 7 ################################################
ZFS & Hardware
  ZFS
    0
    Mirror
    raidz2
    raidz3
  Hardware
    BOX
    BIOS
    cpu
    RAM
    PCI
    DEV
    Supply
    PCI
    SATA
    SAS
    USB
    JBOD

# 8 ################################################
SCHMATIC
  SIMP
  TOWR
  Utilities

# 9 ################################################
MAN
  unix manuals
    log
    mount
    boot
    ntfs
  perl manuals
    log
    language
    modules
  zfs manuals
    log
    hotswap
    import
    set
  dtrace manuals
    language

# END ##############################################
MANIFESTO
  Appalachian Epic of 3Shot
  Virtues of Narcissism
  Esoteric Order of Dagon

# 0 ################################################
SICC
{#} Standard
{##} System In Complete Chaos
{###} The core of this system is based on the sha-algorithm which produces unique data identifiers
{###} Each file is named after its mathematically-based unique identifier
{###} This de-duplicates & assigns data into Chaos order
{###} Metadata is securely kept seperate from the data
{###} This isolation allows for open obfuscation of data
{###} All data files are kept in one location in alphanumeric order of a 64 hexadecimal identifier

{#} Metadata files include four entries:
{##} name - MKRX XS standardized name
{##} path - MKRX XS standardized path of extraction
{##} size - number of bytes
{##} encode - type of encoding

{#} SLICR & BLKR further deepens the obfuscation to unprecedented levels
{##} SLICR
{###} Shreds a file into random-sized parts & creates KEY
{##} BLKR
{###} Blocks file into standard-size parts that produce associative compression & creates KEY
{###} Homogeneous data types will have duplicate collisions discovered in the sha which will overwrite the previous file that is an exact copy
{###} The smaller the per-NODE block size the greater the compression & obfuscation

{#} KEY recipe to rebuild file it is named after
{##} KEY file is named after the original file sha
{##} Contains a sequential list of sha that produce the file
